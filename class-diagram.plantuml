@startuml

skinparam shadowing false
skinparam monochrome true
skinparam backgroundColor transparent
skinparam classBackgroundColor transparent
skinparam style strictuml

class Coords {
    x : double
    y : double
}

class AirTrafficMonitor {
    + flightHandler : FlightHandler
    + conflictHandler : ConflictHandler
    + flightTranspoder : FlightTransponder
    + airspace : Airspace
    --
    + Poll() : void
}
AirTrafficMonitor --> FlightHandler
AirTrafficMonitor --> ConflictHandler
AirTrafficMonitor --> FlightTransponder
AirTrafficMonitor --> Airspace

class Airspace {
    + Length : double <<get>> <<private set>>
    + Depth : double <<get>> <<private set>>
    + MinHeight : double <<get>> <<private set>>
    + MaxHeight : double <<get>> <<private set>>
    --
    + InArea(Flight flight): bool
}

class FlightHandler {
    + flights : List<Flight>
    --
    - ValidateFlightData(List<Flight> flightData) : void
    + GetFlights(): List<Flight> flights
    - ValidateFlights(List<Flight> flights) : void
}
FlightHandler --> Flight

class Flight {
    + tag : String
    + position : Coords
    + timestamp : String
    + altitude : String

}
Flight --> Coords

class FlightTransponder {
    --
    + ReceiveFlightData(): List<Flight> flightData
}
FlightTransponder --> TransponderReceiver

class TransponderReceiver<<DLL>> {
    --
    GetFlights(): List<Flight> flights
}

class ConflictHandler {
    + conflicts : List<Conflict>
    --
    - CheckForConflicts(Flight flight1, Flight flight2): void
    + GetConflicts(): List<Conflict> conflicts
    + UpdateConflicts(List<Flight> ): void
}
ConflictHandler --> Conflict

class Conflict {
    + first : Flight
    + second : Flight
}

@enduml
